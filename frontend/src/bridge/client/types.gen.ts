// This file is auto-generated by @hey-api/openapi-ts

export type ErrorResponse = {
    /**
     * Error message describing what went wrong
     */
    message: string;
};

export type LoginRequest = {
    email: string;
    password: string;
};

export type LoginResponse = {
    token: string;
};

export type MessageResponse = {
    /**
     * Response message
     */
    message: string;
};

export type ProfileResponse = {
    created_at?: string | null;
    email: string;
    id: string;
};

export type RegisterRequest = {
    /**
     * User's email address
     */
    email: string;
    /**
     * User's password
     */
    password: string;
};

export type RegisterResponse = {
    /**
     * Timestamp when the user was created (ISO 8601 format)
     */
    createdAt?: string | null;
    /**
     * User's email address
     */
    email: string;
    /**
     * Success message
     */
    message: string;
    /**
     * The newly created user's ID
     */
    userId: string;
};

export type LoginHandlerData = {
    body: LoginRequest;
    path?: never;
    query?: never;
    url: '/api/v1/auth/login';
};

export type LoginHandlerErrors = {
    /**
     * Bad request - validation errors
     */
    400: ErrorResponse;
    /**
     * Unauthorized - invalid credentials
     */
    401: ErrorResponse;
    /**
     * Internal server error
     */
    500: ErrorResponse;
};

export type LoginHandlerError = LoginHandlerErrors[keyof LoginHandlerErrors];

export type LoginHandlerResponses = {
    /**
     * Login successful
     */
    200: LoginResponse;
};

export type LoginHandlerResponse = LoginHandlerResponses[keyof LoginHandlerResponses];

export type LogoutHandlerData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/auth/logout';
};

export type LogoutHandlerResponses = {
    /**
     * Logout successful
     */
    200: MessageResponse;
};

export type LogoutHandlerResponse = LogoutHandlerResponses[keyof LogoutHandlerResponses];

export type ProfileHandlerData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/auth/profile';
};

export type ProfileHandlerErrors = {
    /**
     * Unauthorized - authentication required
     */
    401: ErrorResponse;
    /**
     * Not found - user not found
     */
    404: ErrorResponse;
    /**
     * Internal server error
     */
    500: ErrorResponse;
};

export type ProfileHandlerError = ProfileHandlerErrors[keyof ProfileHandlerErrors];

export type ProfileHandlerResponses = {
    /**
     * Profile retrieved successfully
     */
    200: ProfileResponse;
};

export type ProfileHandlerResponse = ProfileHandlerResponses[keyof ProfileHandlerResponses];

export type RegisterHandlerData = {
    body: RegisterRequest;
    path?: never;
    query?: never;
    url: '/api/v1/auth/register';
};

export type RegisterHandlerErrors = {
    /**
     * Bad request - validation errors
     */
    400: ErrorResponse;
    /**
     * Conflict - user already exists
     */
    409: ErrorResponse;
    /**
     * Internal server error
     */
    500: ErrorResponse;
};

export type RegisterHandlerError = RegisterHandlerErrors[keyof RegisterHandlerErrors];

export type RegisterHandlerResponses = {
    /**
     * User created successfully
     */
    201: RegisterResponse;
};

export type RegisterHandlerResponse = RegisterHandlerResponses[keyof RegisterHandlerResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:3000' | (string & {});
};