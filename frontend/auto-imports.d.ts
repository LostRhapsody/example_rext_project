/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
// biome-ignore lint: disable
export {}
declare global {
  const EffectScope: typeof import('vue')['EffectScope']
  const acceptHMRUpdate: typeof import('pinia')['acceptHMRUpdate']
  const adminLoginHandler: typeof import('./src/bridge/client/sdk.gen')['adminLoginHandler']
  const adminLogoutHandler: typeof import('./src/bridge/client/sdk.gen')['adminLogoutHandler']
  const buildClientParams: typeof import('./src/bridge/client/core/params')['buildClientParams']
  const buildUrl: typeof import('./src/bridge/client/client/utils')['buildUrl']
  const checkPermissionHandler: typeof import('./src/bridge/client/sdk.gen')['checkPermissionHandler']
  const client: typeof import('./src/bridge/client/client.gen')['client']
  const computed: typeof import('vue')['computed']
  const createApp: typeof import('vue')['createApp']
  const createClient: typeof import('./src/bridge/client/client/index')['createClient']
  const createConfig: typeof import('./src/bridge/client/client/utils')['createConfig']
  const createInterceptors: typeof import('./src/bridge/client/client/utils')['createInterceptors']
  const createPinia: typeof import('pinia')['createPinia']
  const createQuerySerializer: typeof import('./src/bridge/client/client/utils')['createQuerySerializer']
  const createRoleHandler: typeof import('./src/bridge/client/sdk.gen')['createRoleHandler']
  const createUserHandler: typeof import('./src/bridge/client/sdk.gen')['createUserHandler']
  const customRef: typeof import('vue')['customRef']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const defineStore: typeof import('pinia')['defineStore']
  const deleteRoleHandler: typeof import('./src/bridge/client/sdk.gen')['deleteRoleHandler']
  const deleteUserHandler: typeof import('./src/bridge/client/sdk.gen')['deleteUserHandler']
  const effectScope: typeof import('vue')['effectScope']
  const formDataBodySerializer: typeof import('./src/bridge/client/core/bodySerializer')['formDataBodySerializer']
  const getActivePinia: typeof import('pinia')['getActivePinia']
  const getAuditLogsHandler: typeof import('./src/bridge/client/sdk.gen')['getAuditLogsHandler']
  const getAuthToken: typeof import('./src/bridge/client/core/auth')['getAuthToken']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const getDatabaseTablesHandler: typeof import('./src/bridge/client/sdk.gen')['getDatabaseTablesHandler']
  const getParseAs: typeof import('./src/bridge/client/client/utils')['getParseAs']
  const getRoleHandler: typeof import('./src/bridge/client/sdk.gen')['getRoleHandler']
  const getRolesHandler: typeof import('./src/bridge/client/sdk.gen')['getRolesHandler']
  const getTableRecordsHandler: typeof import('./src/bridge/client/sdk.gen')['getTableRecordsHandler']
  const getUrl: typeof import('./src/bridge/client/client/utils')['getUrl']
  const getUserHandler: typeof import('./src/bridge/client/sdk.gen')['getUserHandler']
  const getUsersHandler: typeof import('./src/bridge/client/sdk.gen')['getUsersHandler']
  const h: typeof import('vue')['h']
  const healthHandler: typeof import('./src/bridge/client/sdk.gen')['healthHandler']
  const inject: typeof import('vue')['inject']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const jsonBodySerializer: typeof import('./src/bridge/client/core/bodySerializer')['jsonBodySerializer']
  const loginHandler: typeof import('./src/bridge/client/sdk.gen')['loginHandler']
  const logoutHandler: typeof import('./src/bridge/client/sdk.gen')['logoutHandler']
  const mapActions: typeof import('pinia')['mapActions']
  const mapGetters: typeof import('pinia')['mapGetters']
  const mapState: typeof import('pinia')['mapState']
  const mapStores: typeof import('pinia')['mapStores']
  const mapWritableState: typeof import('pinia')['mapWritableState']
  const markRaw: typeof import('vue')['markRaw']
  const mergeConfigs: typeof import('./src/bridge/client/client/utils')['mergeConfigs']
  const mergeHeaders: typeof import('./src/bridge/client/client/utils')['mergeHeaders']
  const nextTick: typeof import('vue')['nextTick']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeRouteLeave: typeof import('vue-router')['onBeforeRouteLeave']
  const onBeforeRouteUpdate: typeof import('vue-router')['onBeforeRouteUpdate']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const onWatcherCleanup: typeof import('vue')['onWatcherCleanup']
  const profileHandler: typeof import('./src/bridge/client/sdk.gen')['profileHandler']
  const provide: typeof import('vue')['provide']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const registerHandler: typeof import('./src/bridge/client/sdk.gen')['registerHandler']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const separatorArrayExplode: typeof import('./src/bridge/client/core/pathSerializer')['separatorArrayExplode']
  const separatorArrayNoExplode: typeof import('./src/bridge/client/core/pathSerializer')['separatorArrayNoExplode']
  const separatorObjectExplode: typeof import('./src/bridge/client/core/pathSerializer')['separatorObjectExplode']
  const serializeArrayParam: typeof import('./src/bridge/client/core/pathSerializer')['serializeArrayParam']
  const serializeObjectParam: typeof import('./src/bridge/client/core/pathSerializer')['serializeObjectParam']
  const serializePrimitiveParam: typeof import('./src/bridge/client/core/pathSerializer')['serializePrimitiveParam']
  const setActivePinia: typeof import('pinia')['setActivePinia']
  const setAuthParams: typeof import('./src/bridge/client/client/utils')['setAuthParams']
  const setMapStoreSuffix: typeof import('pinia')['setMapStoreSuffix']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const storeToRefs: typeof import('pinia')['storeToRefs']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const toValue: typeof import('vue')['toValue']
  const triggerRef: typeof import('vue')['triggerRef']
  const unref: typeof import('vue')['unref']
  const updateRoleHandler: typeof import('./src/bridge/client/sdk.gen')['updateRoleHandler']
  const updateUserHandler: typeof import('./src/bridge/client/sdk.gen')['updateUserHandler']
  const urlSearchParamsBodySerializer: typeof import('./src/bridge/client/core/bodySerializer')['urlSearchParamsBodySerializer']
  const useAttrs: typeof import('vue')['useAttrs']
  const useAuth: typeof import('./src/appearance/composables/useAuth')['useAuth']
  const useCounter: typeof import('./src/composables/useCounter')['useCounter']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useId: typeof import('vue')['useId']
  const useLink: typeof import('vue-router')['useLink']
  const useModel: typeof import('vue')['useModel']
  const useRoute: typeof import('vue-router')['useRoute']
  const useRouter: typeof import('vue-router')['useRouter']
  const useSlots: typeof import('vue')['useSlots']
  const useTemplateRef: typeof import('vue')['useTemplateRef']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
  const zAdminLoginHandlerData: typeof import('./src/bridge/client/zod.gen')['zAdminLoginHandlerData']
  const zAdminLoginHandlerResponse: typeof import('./src/bridge/client/zod.gen')['zAdminLoginHandlerResponse']
  const zAdminLoginRequest: typeof import('./src/bridge/client/zod.gen')['zAdminLoginRequest']
  const zAdminLoginResponse: typeof import('./src/bridge/client/zod.gen')['zAdminLoginResponse']
  const zAdminLogoutHandlerData: typeof import('./src/bridge/client/zod.gen')['zAdminLogoutHandlerData']
  const zAdminLogoutHandlerResponse: typeof import('./src/bridge/client/zod.gen')['zAdminLogoutHandlerResponse']
  const zAuditLogResponse: typeof import('./src/bridge/client/zod.gen')['zAuditLogResponse']
  const zAuthUser: typeof import('./src/bridge/client/zod.gen')['zAuthUser']
  const zCheckPermissionHandlerData: typeof import('./src/bridge/client/zod.gen')['zCheckPermissionHandlerData']
  const zCheckPermissionHandlerResponse: typeof import('./src/bridge/client/zod.gen')['zCheckPermissionHandlerResponse']
  const zCreateRoleHandlerData: typeof import('./src/bridge/client/zod.gen')['zCreateRoleHandlerData']
  const zCreateRoleHandlerResponse: typeof import('./src/bridge/client/zod.gen')['zCreateRoleHandlerResponse']
  const zCreateRoleRequest: typeof import('./src/bridge/client/zod.gen')['zCreateRoleRequest']
  const zCreateUserHandlerData: typeof import('./src/bridge/client/zod.gen')['zCreateUserHandlerData']
  const zCreateUserHandlerResponse: typeof import('./src/bridge/client/zod.gen')['zCreateUserHandlerResponse']
  const zCreateUserRequest: typeof import('./src/bridge/client/zod.gen')['zCreateUserRequest']
  const zDatabasePerformanceResponse: typeof import('./src/bridge/client/zod.gen')['zDatabasePerformanceResponse']
  const zDatabaseTableResponse: typeof import('./src/bridge/client/zod.gen')['zDatabaseTableResponse']
  const zDeleteRoleHandlerData: typeof import('./src/bridge/client/zod.gen')['zDeleteRoleHandlerData']
  const zDeleteRoleHandlerResponse: typeof import('./src/bridge/client/zod.gen')['zDeleteRoleHandlerResponse']
  const zDeleteUserHandlerData: typeof import('./src/bridge/client/zod.gen')['zDeleteUserHandlerData']
  const zDeleteUserHandlerResponse: typeof import('./src/bridge/client/zod.gen')['zDeleteUserHandlerResponse']
  const zErrorResponse: typeof import('./src/bridge/client/zod.gen')['zErrorResponse']
  const zGetAuditLogsHandlerData: typeof import('./src/bridge/client/zod.gen')['zGetAuditLogsHandlerData']
  const zGetAuditLogsHandlerResponse: typeof import('./src/bridge/client/zod.gen')['zGetAuditLogsHandlerResponse']
  const zGetDatabaseTablesHandlerData: typeof import('./src/bridge/client/zod.gen')['zGetDatabaseTablesHandlerData']
  const zGetDatabaseTablesHandlerResponse: typeof import('./src/bridge/client/zod.gen')['zGetDatabaseTablesHandlerResponse']
  const zGetRoleHandlerData: typeof import('./src/bridge/client/zod.gen')['zGetRoleHandlerData']
  const zGetRoleHandlerResponse: typeof import('./src/bridge/client/zod.gen')['zGetRoleHandlerResponse']
  const zGetRolesHandlerData: typeof import('./src/bridge/client/zod.gen')['zGetRolesHandlerData']
  const zGetRolesHandlerResponse: typeof import('./src/bridge/client/zod.gen')['zGetRolesHandlerResponse']
  const zGetTableRecordsHandlerData: typeof import('./src/bridge/client/zod.gen')['zGetTableRecordsHandlerData']
  const zGetTableRecordsHandlerResponse: typeof import('./src/bridge/client/zod.gen')['zGetTableRecordsHandlerResponse']
  const zGetUserHandlerData: typeof import('./src/bridge/client/zod.gen')['zGetUserHandlerData']
  const zGetUserHandlerResponse: typeof import('./src/bridge/client/zod.gen')['zGetUserHandlerResponse']
  const zGetUsersHandlerData: typeof import('./src/bridge/client/zod.gen')['zGetUsersHandlerData']
  const zGetUsersHandlerResponse: typeof import('./src/bridge/client/zod.gen')['zGetUsersHandlerResponse']
  const zHealthHandlerData: typeof import('./src/bridge/client/zod.gen')['zHealthHandlerData']
  const zHealthHandlerResponse: typeof import('./src/bridge/client/zod.gen')['zHealthHandlerResponse']
  const zHealthResponse: typeof import('./src/bridge/client/zod.gen')['zHealthResponse']
  const zLoginHandlerData: typeof import('./src/bridge/client/zod.gen')['zLoginHandlerData']
  const zLoginHandlerResponse: typeof import('./src/bridge/client/zod.gen')['zLoginHandlerResponse']
  const zLoginRequest: typeof import('./src/bridge/client/zod.gen')['zLoginRequest']
  const zLoginResponse: typeof import('./src/bridge/client/zod.gen')['zLoginResponse']
  const zLogoutHandlerData: typeof import('./src/bridge/client/zod.gen')['zLogoutHandlerData']
  const zLogoutHandlerResponse: typeof import('./src/bridge/client/zod.gen')['zLogoutHandlerResponse']
  const zLogsQueryParams: typeof import('./src/bridge/client/zod.gen')['zLogsQueryParams']
  const zMessageResponse: typeof import('./src/bridge/client/zod.gen')['zMessageResponse']
  const zPaginatedResponseAuditLogResponse: typeof import('./src/bridge/client/zod.gen')['zPaginatedResponseAuditLogResponse']
  const zPaginatedResponseRoleResponse: typeof import('./src/bridge/client/zod.gen')['zPaginatedResponseRoleResponse']
  const zPaginatedResponseUserResponse: typeof import('./src/bridge/client/zod.gen')['zPaginatedResponseUserResponse']
  const zPaginationMeta: typeof import('./src/bridge/client/zod.gen')['zPaginationMeta']
  const zPermissionCheckRequest: typeof import('./src/bridge/client/zod.gen')['zPermissionCheckRequest']
  const zPermissionCheckResponse: typeof import('./src/bridge/client/zod.gen')['zPermissionCheckResponse']
  const zProfileHandlerData: typeof import('./src/bridge/client/zod.gen')['zProfileHandlerData']
  const zProfileHandlerResponse: typeof import('./src/bridge/client/zod.gen')['zProfileHandlerResponse']
  const zProfileResponse: typeof import('./src/bridge/client/zod.gen')['zProfileResponse']
  const zRegisterHandlerData: typeof import('./src/bridge/client/zod.gen')['zRegisterHandlerData']
  const zRegisterHandlerResponse: typeof import('./src/bridge/client/zod.gen')['zRegisterHandlerResponse']
  const zRegisterRequest: typeof import('./src/bridge/client/zod.gen')['zRegisterRequest']
  const zRegisterResponse: typeof import('./src/bridge/client/zod.gen')['zRegisterResponse']
  const zRoleResponse: typeof import('./src/bridge/client/zod.gen')['zRoleResponse']
  const zTableRecordResponse: typeof import('./src/bridge/client/zod.gen')['zTableRecordResponse']
  const zTableRecordsQueryParams: typeof import('./src/bridge/client/zod.gen')['zTableRecordsQueryParams']
  const zUpdateRoleHandlerData: typeof import('./src/bridge/client/zod.gen')['zUpdateRoleHandlerData']
  const zUpdateRoleHandlerResponse: typeof import('./src/bridge/client/zod.gen')['zUpdateRoleHandlerResponse']
  const zUpdateRoleRequest: typeof import('./src/bridge/client/zod.gen')['zUpdateRoleRequest']
  const zUpdateUserHandlerData: typeof import('./src/bridge/client/zod.gen')['zUpdateUserHandlerData']
  const zUpdateUserHandlerResponse: typeof import('./src/bridge/client/zod.gen')['zUpdateUserHandlerResponse']
  const zUpdateUserRequest: typeof import('./src/bridge/client/zod.gen')['zUpdateUserRequest']
  const zUserResponse: typeof import('./src/bridge/client/zod.gen')['zUserResponse']
  const zUsersQueryParams: typeof import('./src/bridge/client/zod.gen')['zUsersQueryParams']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, Slot, Slots, ComponentPublicInstance, ComputedRef, DirectiveBinding, ExtractDefaultPropTypes, ExtractPropTypes, ExtractPublicPropTypes, InjectionKey, PropType, Ref, MaybeRef, MaybeRefOrGetter, VNode, WritableComputedRef } from 'vue'
  import('vue')
  // @ts-ignore
  export type { AdminLoginRequest, AdminLoginResponse, AuditLogResponse, AuthUser, CreateRoleRequest, CreateUserRequest, DatabasePerformanceResponse, DatabaseTableResponse, ErrorResponse, HealthResponse, LoginRequest, LoginResponse, LogsQueryParams, MessageResponse, PaginatedResponseAuditLogResponse, PaginatedResponseRoleResponse, PaginatedResponseUserResponse, PaginationMeta, PermissionCheckRequest, PermissionCheckResponse, ProfileResponse, RegisterRequest, RegisterResponse, RoleResponse, TableRecordResponse, TableRecordsQueryParams, UpdateRoleRequest, UpdateUserRequest, UserResponse, UsersQueryParams, GetDatabaseTablesHandlerData, GetDatabaseTablesHandlerErrors, GetDatabaseTablesHandlerError, GetDatabaseTablesHandlerResponses, GetDatabaseTablesHandlerResponse, GetTableRecordsHandlerData, GetTableRecordsHandlerErrors, GetTableRecordsHandlerError, GetTableRecordsHandlerResponses, GetTableRecordsHandlerResponse, HealthHandlerData, HealthHandlerErrors, HealthHandlerError, HealthHandlerResponses, HealthHandlerResponse, AdminLoginHandlerData, AdminLoginHandlerErrors, AdminLoginHandlerError, AdminLoginHandlerResponses, AdminLoginHandlerResponse, AdminLogoutHandlerData, AdminLogoutHandlerResponses, AdminLogoutHandlerResponse, GetAuditLogsHandlerData, GetAuditLogsHandlerErrors, GetAuditLogsHandlerError, GetAuditLogsHandlerResponses, GetAuditLogsHandlerResponse, CheckPermissionHandlerData, CheckPermissionHandlerErrors, CheckPermissionHandlerError, CheckPermissionHandlerResponses, CheckPermissionHandlerResponse, GetRolesHandlerData, GetRolesHandlerErrors, GetRolesHandlerError, GetRolesHandlerResponses, GetRolesHandlerResponse, CreateRoleHandlerData, CreateRoleHandlerErrors, CreateRoleHandlerError, CreateRoleHandlerResponses, CreateRoleHandlerResponse, DeleteRoleHandlerData, DeleteRoleHandlerErrors, DeleteRoleHandlerError, DeleteRoleHandlerResponses, DeleteRoleHandlerResponse, GetRoleHandlerData, GetRoleHandlerErrors, GetRoleHandlerError, GetRoleHandlerResponses, GetRoleHandlerResponse, UpdateRoleHandlerData, UpdateRoleHandlerErrors, UpdateRoleHandlerError, UpdateRoleHandlerResponses, UpdateRoleHandlerResponse, GetUsersHandlerData, GetUsersHandlerErrors, GetUsersHandlerError, GetUsersHandlerResponses, GetUsersHandlerResponse, CreateUserHandlerData, CreateUserHandlerErrors, CreateUserHandlerError, CreateUserHandlerResponses, CreateUserHandlerResponse, DeleteUserHandlerData, DeleteUserHandlerErrors, DeleteUserHandlerError, DeleteUserHandlerResponses, DeleteUserHandlerResponse, GetUserHandlerData, GetUserHandlerErrors, GetUserHandlerError, GetUserHandlerResponses, GetUserHandlerResponse, UpdateUserHandlerData, UpdateUserHandlerErrors, UpdateUserHandlerError, UpdateUserHandlerResponses, UpdateUserHandlerResponse, LoginHandlerData, LoginHandlerErrors, LoginHandlerError, LoginHandlerResponses, LoginHandlerResponse, LogoutHandlerData, LogoutHandlerResponses, LogoutHandlerResponse, ProfileHandlerData, ProfileHandlerErrors, ProfileHandlerError, ProfileHandlerResponses, ProfileHandlerResponse, RegisterHandlerData, RegisterHandlerErrors, RegisterHandlerError, RegisterHandlerResponses, RegisterHandlerResponse, ClientOptions } from './src/bridge/client/types.gen'
  import('./src/bridge/client/types.gen')
  // @ts-ignore
  export type { Options } from './src/bridge/client/sdk.gen'
  import('./src/bridge/client/sdk.gen')
}

// for vue template auto import
import { UnwrapRef } from 'vue'
declare module 'vue' {
  interface GlobalComponents {}
  interface ComponentCustomProperties {
    readonly EffectScope: UnwrapRef<typeof import('vue')['EffectScope']>
    readonly acceptHMRUpdate: UnwrapRef<typeof import('pinia')['acceptHMRUpdate']>
    readonly adminLoginHandler: UnwrapRef<typeof import('./src/bridge/client/sdk.gen')['adminLoginHandler']>
    readonly adminLogoutHandler: UnwrapRef<typeof import('./src/bridge/client/sdk.gen')['adminLogoutHandler']>
    readonly checkPermissionHandler: UnwrapRef<typeof import('./src/bridge/client/sdk.gen')['checkPermissionHandler']>
    readonly computed: UnwrapRef<typeof import('vue')['computed']>
    readonly createApp: UnwrapRef<typeof import('vue')['createApp']>
    readonly createPinia: UnwrapRef<typeof import('pinia')['createPinia']>
    readonly createRoleHandler: UnwrapRef<typeof import('./src/bridge/client/sdk.gen')['createRoleHandler']>
    readonly createUserHandler: UnwrapRef<typeof import('./src/bridge/client/sdk.gen')['createUserHandler']>
    readonly customRef: UnwrapRef<typeof import('vue')['customRef']>
    readonly defineAsyncComponent: UnwrapRef<typeof import('vue')['defineAsyncComponent']>
    readonly defineComponent: UnwrapRef<typeof import('vue')['defineComponent']>
    readonly defineStore: UnwrapRef<typeof import('pinia')['defineStore']>
    readonly deleteRoleHandler: UnwrapRef<typeof import('./src/bridge/client/sdk.gen')['deleteRoleHandler']>
    readonly deleteUserHandler: UnwrapRef<typeof import('./src/bridge/client/sdk.gen')['deleteUserHandler']>
    readonly effectScope: UnwrapRef<typeof import('vue')['effectScope']>
    readonly getActivePinia: UnwrapRef<typeof import('pinia')['getActivePinia']>
    readonly getAuditLogsHandler: UnwrapRef<typeof import('./src/bridge/client/sdk.gen')['getAuditLogsHandler']>
    readonly getCurrentInstance: UnwrapRef<typeof import('vue')['getCurrentInstance']>
    readonly getCurrentScope: UnwrapRef<typeof import('vue')['getCurrentScope']>
    readonly getDatabaseTablesHandler: UnwrapRef<typeof import('./src/bridge/client/sdk.gen')['getDatabaseTablesHandler']>
    readonly getRoleHandler: UnwrapRef<typeof import('./src/bridge/client/sdk.gen')['getRoleHandler']>
    readonly getRolesHandler: UnwrapRef<typeof import('./src/bridge/client/sdk.gen')['getRolesHandler']>
    readonly getTableRecordsHandler: UnwrapRef<typeof import('./src/bridge/client/sdk.gen')['getTableRecordsHandler']>
    readonly getUserHandler: UnwrapRef<typeof import('./src/bridge/client/sdk.gen')['getUserHandler']>
    readonly getUsersHandler: UnwrapRef<typeof import('./src/bridge/client/sdk.gen')['getUsersHandler']>
    readonly h: UnwrapRef<typeof import('vue')['h']>
    readonly healthHandler: UnwrapRef<typeof import('./src/bridge/client/sdk.gen')['healthHandler']>
    readonly inject: UnwrapRef<typeof import('vue')['inject']>
    readonly isProxy: UnwrapRef<typeof import('vue')['isProxy']>
    readonly isReactive: UnwrapRef<typeof import('vue')['isReactive']>
    readonly isReadonly: UnwrapRef<typeof import('vue')['isReadonly']>
    readonly isRef: UnwrapRef<typeof import('vue')['isRef']>
    readonly loginHandler: UnwrapRef<typeof import('./src/bridge/client/sdk.gen')['loginHandler']>
    readonly logoutHandler: UnwrapRef<typeof import('./src/bridge/client/sdk.gen')['logoutHandler']>
    readonly mapActions: UnwrapRef<typeof import('pinia')['mapActions']>
    readonly mapGetters: UnwrapRef<typeof import('pinia')['mapGetters']>
    readonly mapState: UnwrapRef<typeof import('pinia')['mapState']>
    readonly mapStores: UnwrapRef<typeof import('pinia')['mapStores']>
    readonly mapWritableState: UnwrapRef<typeof import('pinia')['mapWritableState']>
    readonly markRaw: UnwrapRef<typeof import('vue')['markRaw']>
    readonly nextTick: UnwrapRef<typeof import('vue')['nextTick']>
    readonly onActivated: UnwrapRef<typeof import('vue')['onActivated']>
    readonly onBeforeMount: UnwrapRef<typeof import('vue')['onBeforeMount']>
    readonly onBeforeRouteLeave: UnwrapRef<typeof import('vue-router')['onBeforeRouteLeave']>
    readonly onBeforeRouteUpdate: UnwrapRef<typeof import('vue-router')['onBeforeRouteUpdate']>
    readonly onBeforeUnmount: UnwrapRef<typeof import('vue')['onBeforeUnmount']>
    readonly onBeforeUpdate: UnwrapRef<typeof import('vue')['onBeforeUpdate']>
    readonly onDeactivated: UnwrapRef<typeof import('vue')['onDeactivated']>
    readonly onErrorCaptured: UnwrapRef<typeof import('vue')['onErrorCaptured']>
    readonly onMounted: UnwrapRef<typeof import('vue')['onMounted']>
    readonly onRenderTracked: UnwrapRef<typeof import('vue')['onRenderTracked']>
    readonly onRenderTriggered: UnwrapRef<typeof import('vue')['onRenderTriggered']>
    readonly onScopeDispose: UnwrapRef<typeof import('vue')['onScopeDispose']>
    readonly onServerPrefetch: UnwrapRef<typeof import('vue')['onServerPrefetch']>
    readonly onUnmounted: UnwrapRef<typeof import('vue')['onUnmounted']>
    readonly onUpdated: UnwrapRef<typeof import('vue')['onUpdated']>
    readonly onWatcherCleanup: UnwrapRef<typeof import('vue')['onWatcherCleanup']>
    readonly profileHandler: UnwrapRef<typeof import('./src/bridge/client/sdk.gen')['profileHandler']>
    readonly provide: UnwrapRef<typeof import('vue')['provide']>
    readonly reactive: UnwrapRef<typeof import('vue')['reactive']>
    readonly readonly: UnwrapRef<typeof import('vue')['readonly']>
    readonly ref: UnwrapRef<typeof import('vue')['ref']>
    readonly registerHandler: UnwrapRef<typeof import('./src/bridge/client/sdk.gen')['registerHandler']>
    readonly resolveComponent: UnwrapRef<typeof import('vue')['resolveComponent']>
    readonly setActivePinia: UnwrapRef<typeof import('pinia')['setActivePinia']>
    readonly setMapStoreSuffix: UnwrapRef<typeof import('pinia')['setMapStoreSuffix']>
    readonly shallowReactive: UnwrapRef<typeof import('vue')['shallowReactive']>
    readonly shallowReadonly: UnwrapRef<typeof import('vue')['shallowReadonly']>
    readonly shallowRef: UnwrapRef<typeof import('vue')['shallowRef']>
    readonly storeToRefs: UnwrapRef<typeof import('pinia')['storeToRefs']>
    readonly toRaw: UnwrapRef<typeof import('vue')['toRaw']>
    readonly toRef: UnwrapRef<typeof import('vue')['toRef']>
    readonly toRefs: UnwrapRef<typeof import('vue')['toRefs']>
    readonly toValue: UnwrapRef<typeof import('vue')['toValue']>
    readonly triggerRef: UnwrapRef<typeof import('vue')['triggerRef']>
    readonly unref: UnwrapRef<typeof import('vue')['unref']>
    readonly updateRoleHandler: UnwrapRef<typeof import('./src/bridge/client/sdk.gen')['updateRoleHandler']>
    readonly updateUserHandler: UnwrapRef<typeof import('./src/bridge/client/sdk.gen')['updateUserHandler']>
    readonly useAttrs: UnwrapRef<typeof import('vue')['useAttrs']>
    readonly useAuth: UnwrapRef<typeof import('./src/appearance/composables/useAuth')['useAuth']>
    readonly useCssModule: UnwrapRef<typeof import('vue')['useCssModule']>
    readonly useCssVars: UnwrapRef<typeof import('vue')['useCssVars']>
    readonly useId: UnwrapRef<typeof import('vue')['useId']>
    readonly useLink: UnwrapRef<typeof import('vue-router')['useLink']>
    readonly useModel: UnwrapRef<typeof import('vue')['useModel']>
    readonly useRoute: UnwrapRef<typeof import('vue-router')['useRoute']>
    readonly useRouter: UnwrapRef<typeof import('vue-router')['useRouter']>
    readonly useSlots: UnwrapRef<typeof import('vue')['useSlots']>
    readonly useTemplateRef: UnwrapRef<typeof import('vue')['useTemplateRef']>
    readonly watch: UnwrapRef<typeof import('vue')['watch']>
    readonly watchEffect: UnwrapRef<typeof import('vue')['watchEffect']>
    readonly watchPostEffect: UnwrapRef<typeof import('vue')['watchPostEffect']>
    readonly watchSyncEffect: UnwrapRef<typeof import('vue')['watchSyncEffect']>
    readonly zAdminLoginHandlerData: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zAdminLoginHandlerData']>
    readonly zAdminLoginHandlerResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zAdminLoginHandlerResponse']>
    readonly zAdminLoginRequest: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zAdminLoginRequest']>
    readonly zAdminLoginResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zAdminLoginResponse']>
    readonly zAdminLogoutHandlerData: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zAdminLogoutHandlerData']>
    readonly zAdminLogoutHandlerResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zAdminLogoutHandlerResponse']>
    readonly zAuditLogResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zAuditLogResponse']>
    readonly zAuthUser: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zAuthUser']>
    readonly zCheckPermissionHandlerData: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zCheckPermissionHandlerData']>
    readonly zCheckPermissionHandlerResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zCheckPermissionHandlerResponse']>
    readonly zCreateRoleHandlerData: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zCreateRoleHandlerData']>
    readonly zCreateRoleHandlerResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zCreateRoleHandlerResponse']>
    readonly zCreateRoleRequest: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zCreateRoleRequest']>
    readonly zCreateUserHandlerData: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zCreateUserHandlerData']>
    readonly zCreateUserHandlerResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zCreateUserHandlerResponse']>
    readonly zCreateUserRequest: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zCreateUserRequest']>
    readonly zDatabasePerformanceResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zDatabasePerformanceResponse']>
    readonly zDatabaseTableResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zDatabaseTableResponse']>
    readonly zDeleteRoleHandlerData: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zDeleteRoleHandlerData']>
    readonly zDeleteRoleHandlerResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zDeleteRoleHandlerResponse']>
    readonly zDeleteUserHandlerData: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zDeleteUserHandlerData']>
    readonly zDeleteUserHandlerResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zDeleteUserHandlerResponse']>
    readonly zErrorResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zErrorResponse']>
    readonly zGetAuditLogsHandlerData: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zGetAuditLogsHandlerData']>
    readonly zGetAuditLogsHandlerResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zGetAuditLogsHandlerResponse']>
    readonly zGetDatabaseTablesHandlerData: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zGetDatabaseTablesHandlerData']>
    readonly zGetDatabaseTablesHandlerResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zGetDatabaseTablesHandlerResponse']>
    readonly zGetRoleHandlerData: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zGetRoleHandlerData']>
    readonly zGetRoleHandlerResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zGetRoleHandlerResponse']>
    readonly zGetRolesHandlerData: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zGetRolesHandlerData']>
    readonly zGetRolesHandlerResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zGetRolesHandlerResponse']>
    readonly zGetTableRecordsHandlerData: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zGetTableRecordsHandlerData']>
    readonly zGetTableRecordsHandlerResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zGetTableRecordsHandlerResponse']>
    readonly zGetUserHandlerData: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zGetUserHandlerData']>
    readonly zGetUserHandlerResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zGetUserHandlerResponse']>
    readonly zGetUsersHandlerData: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zGetUsersHandlerData']>
    readonly zGetUsersHandlerResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zGetUsersHandlerResponse']>
    readonly zHealthHandlerData: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zHealthHandlerData']>
    readonly zHealthHandlerResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zHealthHandlerResponse']>
    readonly zHealthResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zHealthResponse']>
    readonly zLoginHandlerData: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zLoginHandlerData']>
    readonly zLoginHandlerResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zLoginHandlerResponse']>
    readonly zLoginRequest: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zLoginRequest']>
    readonly zLoginResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zLoginResponse']>
    readonly zLogoutHandlerData: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zLogoutHandlerData']>
    readonly zLogoutHandlerResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zLogoutHandlerResponse']>
    readonly zLogsQueryParams: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zLogsQueryParams']>
    readonly zMessageResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zMessageResponse']>
    readonly zPaginatedResponseAuditLogResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zPaginatedResponseAuditLogResponse']>
    readonly zPaginatedResponseRoleResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zPaginatedResponseRoleResponse']>
    readonly zPaginatedResponseUserResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zPaginatedResponseUserResponse']>
    readonly zPaginationMeta: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zPaginationMeta']>
    readonly zPermissionCheckRequest: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zPermissionCheckRequest']>
    readonly zPermissionCheckResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zPermissionCheckResponse']>
    readonly zProfileHandlerData: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zProfileHandlerData']>
    readonly zProfileHandlerResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zProfileHandlerResponse']>
    readonly zProfileResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zProfileResponse']>
    readonly zRegisterHandlerData: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zRegisterHandlerData']>
    readonly zRegisterHandlerResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zRegisterHandlerResponse']>
    readonly zRegisterRequest: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zRegisterRequest']>
    readonly zRegisterResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zRegisterResponse']>
    readonly zRoleResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zRoleResponse']>
    readonly zTableRecordResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zTableRecordResponse']>
    readonly zTableRecordsQueryParams: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zTableRecordsQueryParams']>
    readonly zUpdateRoleHandlerData: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zUpdateRoleHandlerData']>
    readonly zUpdateRoleHandlerResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zUpdateRoleHandlerResponse']>
    readonly zUpdateRoleRequest: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zUpdateRoleRequest']>
    readonly zUpdateUserHandlerData: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zUpdateUserHandlerData']>
    readonly zUpdateUserHandlerResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zUpdateUserHandlerResponse']>
    readonly zUpdateUserRequest: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zUpdateUserRequest']>
    readonly zUserResponse: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zUserResponse']>
    readonly zUsersQueryParams: UnwrapRef<typeof import('./src/bridge/client/zod.gen')['zUsersQueryParams']>
  }
}